// <auto-generated />
using System;
using ConsoleApp38.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp38.Migrations
{
    [DbContext(typeof(СorrespondenceEFContext))]
    [Migration("20190626074809_in")]
    partial class @in
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ConsoleApp38.Domain.Address", b =>
                {
                    b.Property<int>("Id");

                    b.Property<int>("CityId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Address");
                });

            modelBuilder.Entity("ConsoleApp38.Domain.City", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasAlternateKey("Name")
                        .HasName("UQ_City_Name");

                    b.ToTable("City");
                });

            modelBuilder.Entity("ConsoleApp38.Domain.Contractor", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("PositionId");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("Contractor");
                });

            modelBuilder.Entity("ConsoleApp38.Domain.Position", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("ConsoleApp38.Domain.PostalItem", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<int>("NumberOfPages");

                    b.HasKey("Id");

                    b.ToTable("PostalItem");
                });

            modelBuilder.Entity("ConsoleApp38.Domain.SendingStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PostalItemId");

                    b.Property<int>("ReceivingAddressId");

                    b.Property<int>("ReceivingContractorId");

                    b.Property<int>("SendingAddressId");

                    b.Property<int>("SendingContractorId");

                    b.Property<int>("StatusId");

                    b.Property<DateTimeOffset>("UpdateStatuse");

                    b.HasKey("Id");

                    b.HasIndex("PostalItemId");

                    b.HasIndex("ReceivingAddressId");

                    b.HasIndex("ReceivingContractorId");

                    b.HasIndex("SendingAddressId");

                    b.HasIndex("SendingContractorId");

                    b.HasIndex("StatusId");

                    b.ToTable("SendingStatus");
                });

            modelBuilder.Entity("ConsoleApp38.Domain.Status", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("ConsoleApp38.Domain.Address", b =>
                {
                    b.HasOne("ConsoleApp38.Domain.City", "City")
                        .WithMany("Addresses")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleApp38.Domain.Contractor", b =>
                {
                    b.HasOne("ConsoleApp38.Domain.Position", "Position")
                        .WithMany("Contractors")
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ConsoleApp38.Domain.SendingStatus", b =>
                {
                    b.HasOne("ConsoleApp38.Domain.PostalItem", "PostalItem")
                        .WithMany("PostalItems")
                        .HasForeignKey("PostalItemId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConsoleApp38.Domain.Address", "ReceivingAddress")
                        .WithMany("ReceivingAddresses")
                        .HasForeignKey("ReceivingAddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConsoleApp38.Domain.Contractor", "ReceivingContractor")
                        .WithMany("ReceivingContractors")
                        .HasForeignKey("ReceivingContractorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConsoleApp38.Domain.Address", "SendingAddress")
                        .WithMany("SendingAddresses")
                        .HasForeignKey("SendingAddressId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConsoleApp38.Domain.Contractor", "SendingContractor")
                        .WithMany("SendingContractors")
                        .HasForeignKey("SendingContractorId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ConsoleApp38.Domain.Status", "Status")
                        .WithMany("Statuses")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
